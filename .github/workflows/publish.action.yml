#
name: publish-docker-image


on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build-and-push-image:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: PERSONAL_PLUG_DB
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8100:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean install
        env:
          SECRET_KEY: ${{ env.SECRET_KEY }}
          KEY_STORE_PASSWORD: ${{ env.KEY_STORE_PASSWORD }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Tag Docker image for Azure Container Registry
        run: |
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest myregistry.azurecr.io/${{ env.IMAGE_NAME }}:latest

      # - name: Deploy to Azure Container Instances
      #   uses: azure/aci-deploy@v1
      #   with:
      #     resource_group: personal-plug-site-resource-group
      #     name: PersonalPlugSiteAPIContainer
      #     image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      #     dns_name_label: myapp
      #     location: westus
